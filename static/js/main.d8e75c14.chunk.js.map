{"version":3,"sources":["List.js","All.js","Edit.js","ControlList.js","Help.js","Control.js","Selected.js","App.js","serviceWorker.js","index.js"],"names":["ListContents","props","state","flg","className","id","this","index","question","contents","choices","answer","unit","code","undefined","list","choiceList","map","choice","key","comments","onClick","openAnswer","comment","url","setState","React","Component","All","json","getFireData","handleJsonChange","bind","ref","firebase","database","self","orderByKey","on","snapshot","val","li","slice","push","contentsList","count","i","length","Edit","choicesChengeHandler","deleteChoiceHandler","addFireData","editFireData","difficulty","editFlg","value","name","onChange","e","target","inputTextList","split","text","replace","alert","inputCheck","clear","close","window","confirm","set","delflg","addChoices","deleteQuestion","editHeader","codehandleChange","changeChoice","deleteChoice","createAnswer","type","modalOpen","defaultProps","Choices","ControlList","changeCheckbox","checked","isOutput","returnId","outputListControl","editQuestion","Help","Modal","setAppElement","Control","ControlQuestion","outputJsonFile","outputListControler","searchControler","editContentsHandler","closeModal","searchedListCheck","allCheckRemove","outputList","editId","editContents","modalIsOpen","helpIsOpen","searchData","includes","openModal","data","Blob","join","jsonURL","URL","createObjectURL","link","document","createElement","body","appendChild","href","setAttribute","click","removeChild","indexOf","modal","ClassNames","help","controlHeader","Selected","getFile","selectedHeader","event","files","reader","FileReader","readAsText","addEventListener","selectedidList","result","equalTo","elm","defaultPath","App","path","exact","component","Header","to","Footer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d8e75c14.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class ListContents extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            flg: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"contents content\" id={this.props.index}>\r\n                {this.question(this.props.contents, this.props.index)}\r\n                {this.choices(this.props.contents.choices)}\r\n                {this.answer(this.props.contents, this.props.index)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    question(contents, index) {\r\n        const question = (\r\n            <div className=\"question\">\r\n                <p><strong>問題{index + 1} ({contents.unit})</strong></p>\r\n                <p>{contents.question}</p>\r\n                {contents.code === \"\" || contents.code === undefined || contents.code === null ? <span></span>:\r\n                    <div className=\"codebox\">\r\n                        <p>{contents.code}</p>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n        return question;\r\n    }\r\n\r\n    choices(list) {\r\n        const choiceList = list.map((choice, index) => {\r\n            return (\r\n                <li key={index}>{index+1}: {choice}</li>\r\n            );\r\n        });\r\n        const choices = (\r\n            <div className=\"choices\">\r\n                <ul>{choiceList}</ul>\r\n            </div>\r\n        )\r\n\r\n        return choices\r\n    }\r\n\r\n    comment(comments){\r\n        return (\r\n            <div>解説：<br />\r\n                <p className=\"commentList\">{comments}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    answer(contents, index) {\r\n        const flg = this.state.flg;\r\n\r\n        const answer = (\r\n            <div className=\"answer\">\r\n                <button className=\"button is-info\" onClick={() => { this.openAnswer() }}>回答</button>\r\n                {flg &&\r\n                    <div className=\"commentary\">\r\n                        <p>答え： {contents.answer}</p>\r\n                        {this.comment(contents.comment)}\r\n                        <p>参考： {contents.url}</p>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n        return answer;\r\n    }\r\n\r\n    openAnswer() {\r\n        const flg = this.state.flg;\r\n        this.setState({\r\n            flg: !flg\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport firebase from \"firebase\";\r\n\r\nimport List from './List.js'\r\n\r\nexport default class All extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            json: []\r\n        };\r\n        this.getFireData();\r\n        this.handleJsonChange = this.handleJsonChange.bind(this);\r\n    }\r\n\r\n    getFireData(){\r\n        let db = firebase.database();\r\n        let ref = db.ref('contentslist');\r\n        let self = this;\r\n        ref.orderByKey().on('value',(snapshot)=>{\r\n            self.setState({\r\n                json:snapshot.val()\r\n            })\r\n        })\r\n    }\r\n\r\n    handleJsonChange(json) {\r\n        let li = this.state.json.slice();\r\n        li.push(json);\r\n        this.setState({ json: li })\r\n    }\r\n\r\n    contentsList() {\r\n        let contentsList = [];\r\n        let count = 0;\r\n        for(let i in this.state.json){\r\n            const contents = this.state.json[i]\r\n            contentsList.push(\r\n                <List key={i} contents={contents} index={count++} />\r\n            )\r\n        }\r\n        return contentsList;\r\n    }\r\n\r\n    render() {\r\n        if(this.state.json.length === 0){\r\n            this.getFireData();\r\n        }\r\n\r\n        return (\r\n            <div className=\"contentsList\">\r\n                {this.state.json.length === 0 || this.state.json == null\r\n                    ? <p>データがありません</p> : this.contentsList()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\nexport default class Edit extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.choicesChengeHandler = this.choicesChengeHandler.bind(this);\r\n        this.deleteChoiceHandler = this.deleteChoiceHandler.bind(this);\r\n        this.addFireData = this.addFireData.bind(this);\r\n        this.editFireData = this.editFireData.bind(this);\r\n        this.state = {\r\n            unit: \"Java\",\r\n            difficulty: \"入門\",\r\n            question: \"\",\r\n            code: [],\r\n            choices: [\"\", \"\", \"\", \"\", \"\"],\r\n            answer: 1,\r\n            comment: [],\r\n            url: \"\",\r\n            json: [],\r\n            editFlg: \"false\"\r\n        }\r\n    }\r\n\r\n    choicesChengeHandler(index, choice) {\r\n        let choices = this.state.choices.slice();\r\n        choices[index] = choice;\r\n        this.setState({ choices })\r\n    }\r\n\r\n    addChoices() {\r\n        let choices = this.state.choices.slice();\r\n        choices.push(\"\");\r\n        this.setState({ choices })\r\n    }\r\n\r\n    deleteChoiceHandler(index) {\r\n        let choices = this.state.choices.slice();\r\n        choices = [...choices.slice(0, index), ...choices.slice(index + 1)]\r\n        this.setState({ choices })\r\n    }\r\n\r\n    createAnswer() {\r\n        const choiceList = this.state.choices;\r\n        const answer = choiceList.map((choice, index) => {\r\n            return (\r\n                <option key={index} value={index + 1}>{index + 1}</option>\r\n            )\r\n        });\r\n        return (\r\n            <select name=\"answer\" value={this.state.answer}\r\n                onChange={(e) => this.setState({ answer: e.target.value })}>\r\n                {answer}\r\n            </select>\r\n        );\r\n    }\r\n\r\n    codehandleChange(e) {\r\n        const rawText = e.target.value;\r\n        const rawTextList = rawText.split('\\n');\r\n        let inputTextList = rawTextList.map((text) => {\r\n            return (\r\n                text.replace(/[\\d]+\\s\\|\\t/, \"\")\r\n            )\r\n        })\r\n        let code = \"\";\r\n        for (let i = 0; i < inputTextList.length; i++) {\r\n            code += ('000' + (i + 1)).slice(-3) + ' |\\t' + inputTextList[i];\r\n            if (i !== inputTextList.length - 1) {\r\n                code += '\\n';\r\n            }\r\n        }\r\n        this.setState({ code })\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            unit: \"Java\",\r\n            question: \"\",\r\n            code: [],\r\n            choices: [\"\", \"\", \"\", \"\", \"\"],\r\n            answer: 1,\r\n            comment: [],\r\n            url: \"\",\r\n            json: []\r\n        })\r\n    }\r\n\r\n    // 項目の入力チェックを行う。不可の場合アラートを出してfalseを返す\r\n    inputCheck() {\r\n        if (this.state.unit === \"\") {\r\n            alert(\"単元を選択してください\");\r\n            return false;\r\n        }\r\n        if (this.state.question === \"\") {\r\n            alert(\"問題文を入力してください\");\r\n            return false;\r\n        }\r\n        if (this.state.choices.length <= 1) {\r\n            alert(\"二つ以上の選択肢を使用してください\");\r\n            return false;\r\n        }\r\n        for (let i = 0; i < this.state.choices.length; i++) {\r\n            if (this.state.choices[i] === \"\") {\r\n                alert(\"未入力の選択肢があります\")\r\n                return false;\r\n            }\r\n        }\r\n        if (this.state.answer === \"\") {\r\n            alert(\"答えを選択してください\");\r\n            return false;\r\n        }\r\n        if (this.state.comment === \"\") {\r\n            alert(\"解説を入力して下さい\");\r\n            return false;\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    // データ追加処理\r\n    addFireData() {\r\n        if (!this.inputCheck()) { return; }\r\n        let db = firebase.database();\r\n        let ref = db.ref(\"contentslist\");\r\n        let comment = this.state.comment;\r\n        ref.push({\r\n            unit: this.state.unit || '',\r\n            difficulty: this.state.difficulty || '',\r\n            question: this.state.question || '',\r\n            code: this.state.code || '',\r\n            choices: this.state.choices || '',\r\n            answer: this.state.answer || '',\r\n            comment: comment || '',\r\n            url: this.state.url || ''\r\n        })\r\n        this.clear();\r\n        this.props.close();\r\n        alert(\"問題を追加しました\")\r\n    }\r\n\r\n    // データ編集処理\r\n    editFireData() {\r\n        if (!this.inputCheck()) { return; }\r\n        const id = this.props.id;\r\n        if (!window.confirm(\"問題ID：\" + id + \"を編集しますか？\")) {\r\n            return;\r\n        }\r\n        let db = firebase.database();\r\n        let ref = db.ref(\"contentslist/\" + id);\r\n        let comment = this.state.comment;\r\n        ref.set({\r\n            unit: this.state.unit || '',\r\n            difficulty: this.state.difficulty || '',\r\n            question: this.state.question || '',\r\n            code: this.state.code || '',\r\n            choices: this.state.choices || '',\r\n            answer: this.state.answer || '',\r\n            comment: comment || '',\r\n            url: this.state.url || ''\r\n        })\r\n        this.props.close();\r\n        alert(\"問題を編集しました\")\r\n    }\r\n\r\n    // データ削除\r\n    deleteQuestion() {\r\n        const id = this.props.id;\r\n        if (!window.confirm(\"問題ID：\" + id + \"を削除しますか？\")) {\r\n            return;\r\n        }\r\n        let db = firebase.database();\r\n        let ref = db.ref(\"contentslist/\" + id);\r\n        ref.set({\r\n            unit: this.props.contents.unit || '',\r\n            difficulty: this.props.contents.difficulty || '',\r\n            question: this.props.contents.question || '',\r\n            code: this.props.contents.code || '',\r\n            choices: this.props.contents.choices || '',\r\n            answer: this.props.contents.answer || '',\r\n            comment:  this.props.contents.comment || '',\r\n            url: this.props.contents.url || '',\r\n            delflg: true\r\n        });\r\n        this.props.close();\r\n        alert(\"問題を削除しました\")\r\n    }\r\n\r\n    editCansel() {\r\n        this.props.close();\r\n    }\r\n\r\n    // ヘッダー\r\n    editHeader() {\r\n        return (\r\n            <div className=\"contentsHeader sideBySide\">\r\n                <div className=\"editButton\">\r\n                    <button className=\"button is-info\" onClick={() => { this.addChoices() }}>選択肢を増やす</button>\r\n                    <button className=\"button is-info\" onClick={() => { this.clear() }}>クリア</button>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        this.props.id === \"-1\"\r\n                            ? <button className=\"button is-info\" onClick={this.addFireData}>問題を追加する</button>\r\n                            :\r\n                            <div>\r\n                                <button className=\"button is-info\" onClick={this.editFireData}>問題を編集する</button>\r\n                                <button className=\"button is-info\" onClick={() => { this.deleteQuestion() }}>問題を削除する</button>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.editHeader()}\r\n                <div className=\"addQuestion\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th className=\"questionLabel\">単元</th>\r\n                                <th>\r\n                                    <div className=\"select\">\r\n                                        <select name=\"unit\" value={this.state.unit}\r\n                                            onChange={(e) => this.setState({ unit: e.target.value })}>\r\n                                            <option value=\"Java\">Java</option>\r\n                                            <option value=\"Oracle\">Oracle</option>\r\n                                            <option value=\"HTML/CSS\">HTML/CSS</option>\r\n                                            <option value=\"IT基礎\" > IT基礎 </option>\r\n                                        </select>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"questionLabel\">難易度</th>\r\n                                <th>\r\n                                    <div className=\"select\">\r\n                                        <select name=\"difficulty\" value={this.state.difficulty} onChange={(e) => this.setState({ difficulty: e.target.value })} >\r\n                                            <option value=\"入門\" > 入門 </option>\r\n                                            <option value=\"初級\" > 初級 </option>\r\n                                            <option value=\"中級\" > 中級 </option>\r\n                                            <option value=\"上級\" > 上級 </option>\r\n                                        </select>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"questionLabel\">問題文<br /><small>(改行不可)</small></th>\r\n                                <th>\r\n                                    <textarea className=\"textarea\" name=\"question\" value={this.state.question}\r\n                                        onChange={(e) => this.setState({ question: e.target.value.replace(/\\r?\\n/g, \"\") })} />\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"questionLabel\">コード<br /><small>(*1)</small></th>\r\n                                <th>\r\n                                    <textarea className=\"textarea\" name=\"code\" value={this.state.code}\r\n                                        onChange={(e) => this.codehandleChange(e)} />\r\n                                </th>\r\n                            </tr>\r\n                            {this.state.choices.map((choice, index) => (\r\n                                <Choices key={index} index={index} choice={choice}\r\n                                    changeChoice={this.choicesChengeHandler} deleteChoice={this.deleteChoiceHandler} />\r\n                            ))}\r\n                            <tr>\r\n                                <th className=\"questionLabel\">答え</th>\r\n                                <th>\r\n                                    <div className=\"select\">\r\n                                        {this.createAnswer()}\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"questionLabel\">解説</th>\r\n                                <th>\r\n                                    <textarea className=\"textarea\" name=\"comment\" value={this.state.comment}\r\n                                        onChange={(e) => this.setState({ comment: e.target.value })} />\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"questionLabel\">参考</th>\r\n                                <th>\r\n                                    <input className=\"input\" type=\"text\" name=\"url\" value={this.state.url}\r\n                                        onChange={(e) => this.setState({ url: e.target.value })} />\r\n                                </th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <p><small>(*1) 可能な限りテキストエディタ等で書いたものを貼り付けてください</small></p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (!props.modalOpen) {\r\n            return ({\r\n                id: \"-1\",\r\n                unit: \"Java\",\r\n                difficulty: \"入門\",\r\n                question: \"\",\r\n                code: [],\r\n                choices: [\"\", \"\", \"\", \"\", \"\"],\r\n                answer: 1,\r\n                comment: [],\r\n                url: \"\",\r\n                editFlg: false\r\n            })\r\n        } else if (props.modalOpen && state.editFlg) {\r\n            return (null)\r\n        }\r\n\r\n        if (props.id === \"-1\") {\r\n            return ({\r\n                id: \"-1\",\r\n                unit: \"Java\",\r\n                difficulty: \"入門\",\r\n                question: \"\",\r\n                code: [],\r\n                choices: [\"\", \"\", \"\", \"\", \"\"],\r\n                answer: 1,\r\n                comment: [],\r\n                url: \"\",\r\n                editFlg: true\r\n            })\r\n        } else {\r\n            return ({\r\n                id: props.contents.id,\r\n                unit: props.contents.unit,\r\n                difficulty: props.contents.difficulty,\r\n                question: props.contents.question,\r\n                code: props.contents.code,\r\n                choices: props.contents.choices,\r\n                answer: props.contents.answer,\r\n                comment: props.contents.comment,\r\n                url: props.contents.url,\r\n                editFlg: true\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nEdit.defaultProps = {\r\n    id: \"-1\",\r\n    contents: '',\r\n    editFlg: false\r\n}\r\n\r\nclass Choices extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeChoice = this.changeChoice.bind(this);\r\n        this.deleteChoice = this.deleteChoice.bind(this);\r\n    }\r\n\r\n    changeChoice(e) {\r\n        this.props.changeChoice(this.props.index, e.target.value);\r\n    }\r\n\r\n    deleteChoice(index) {\r\n        this.props.deleteChoice(index);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <th className=\"questionLabel\">{this.props.index + 1}</th>\r\n                <th>\r\n                    <input className=\"input\" type=\"text\" value={this.props.choice} onChange={this.changeChoice} />\r\n                    <button className=\"button\" onClick={() => { this.deleteChoice(this.props.index) }}>削除</button>\r\n                </th>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ControlList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckbox = this.changeCheckbox.bind(this);\r\n        this.state = ({\r\n            checked: this.props.isOutput\r\n        })\r\n    }\r\n\r\n    editQuestion() {\r\n        this.props.returnId(this.props.index, this.props.contents);\r\n    }\r\n\r\n    changeCheckbox() {\r\n        const checked = !this.state.checked;\r\n        this.props.outputListControl(this.props.index, checked);\r\n\r\n        this.setState({\r\n            checked: checked\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"contents controlContents content\" id={this.props.index}>\r\n                <div className=\"controlCOntents_2\">\r\n                    <div>\r\n                        <input type=\"checkbox\" checked={this.state.checked}\r\n                            onChange={() => this.changeCheckbox()} />\r\n                    </div>\r\n                    <div>\r\n                        {this.question(this.props.contents, this.props.index)}\r\n                        {this.choices(this.props.contents.choices)}\r\n                        {this.answer(this.props.contents, this.props.index)}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button className=\"button is-info\" onClick={() => { this.editQuestion() }}>編集</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    question(contents, index) {\r\n        const question = (\r\n            <div className=\"question\">\r\n                <p><strong>問題ID:{index} ({contents.unit}：{contents.difficulty})</strong></p>\r\n                <p>{contents.question}</p>\r\n                {contents.code === \"\" || contents.code === undefined || contents.code === null ? <span></span> :\r\n                    <div className=\"codebox\">\r\n                        <p>{contents.code}</p>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n        return question;\r\n    }\r\n\r\n    choices(list) {\r\n        const choiceList = list.map((choice, index) => {\r\n            return (\r\n                <li key={index}>{index + 1}: {choice}</li>\r\n            );\r\n        });\r\n        const choices = (\r\n            <div className=\"choices\">\r\n                <ul>{choiceList}</ul>\r\n            </div>\r\n        )\r\n\r\n        return choices\r\n    }\r\n\r\n    comment(comments) {\r\n        return (\r\n            <div>解説：<br />\r\n                <p className=\"commentList\">{comments}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    answer(contents, index) {\r\n        const answer = (\r\n            <div className=\"answer\">\r\n                <div className=\"commentary\">\r\n                    <p>答え： {contents.answer}</p>\r\n                    {this.comment(contents.comment)}\r\n                    <p>参考： {contents.url}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n        return answer;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        return ({\r\n            checked: props.isOutput\r\n        })\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Help extends React.Component {\r\n    render(){\r\n        return(\r\n            <div className=\"contents content\">\r\n                <div className=\"is-small\">\r\n                    <h3>問題集について</h3>\r\n                    <p>研修で使える問題の作成および、受講生への配布が行えるページです。自習等にご活用ください。</p>\r\n                    <h3>使い方</h3>\r\n                    <h5>・問題の検索</h5>\r\n                    <p>左上のセレクトボックスから、単元及び難易度の選択ができます。</p>\r\n                    <h5>・難易度</h5>\r\n                    <p>各難易度は以下のレベルを想定しています。</p>\r\n                    <ul>\r\n                        <li>入門：講義で説明する内容と同等。</li>\r\n                        <li>初級：教科書の補足になる内容。</li>\r\n                        <li>中級：教科書を一通り理解する必要のある内容（JavaBronze相当）。</li>\r\n                        <li>上級：それ以上（JavaSilver相当）。</li>\r\n                    </ul>\r\n                    <h5>・一括チェック</h5>\r\n                    <p>表示している問題全てにチェックを入れることができます。</p>\r\n                    <h5>・問題の出力</h5>\r\n                    <p>選択した問題一覧を表示するためのファイルを出力できます。</p>\r\n                    <h5>・問題の編集</h5>\r\n                    <p>新しい問題から新規の問題追加を、編集から既存の問題の編集および削除を行えます。</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport Modal from 'react-modal';\r\nimport ClassNames from 'classnames';\r\n\r\nimport Edit from \"./Edit.js\";\r\nimport ControlList from \"./ControlList.js\";\r\nimport Help from \"./Help.js\";\r\n\r\nModal.setAppElement('#root')\r\n\r\nexport default class Control extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ControlQuestion />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ControlQuestion extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.outputJsonFile = this.outputJsonFile.bind(this);\r\n        this.outputListControler = this.outputListControler.bind(this);\r\n        this.searchControler = this.searchControler.bind(this);\r\n        this.editContentsHandler = this.editContentsHandler.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.searchedListCheck = this.searchedListCheck.bind(this);\r\n        this.allCheckRemove = this.allCheckRemove.bind(this);\r\n        this.state = {\r\n            json: [],\r\n            outputList: [],\r\n            unit: \"All\",\r\n            difficulty:\"All\",\r\n            editId: \"-1\",\r\n            editContents: {},\r\n            modalIsOpen: false,\r\n            helpIsOpen: false\r\n        };\r\n        this.getFireData();\r\n    }\r\n\r\n    getFireData() {\r\n        let db = firebase.database();\r\n        let ref = db.ref('contentslist');\r\n        let self = this;\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            self.setState({\r\n                json: snapshot.val()\r\n            })\r\n        })\r\n    }\r\n\r\n    contentsList() {\r\n        let contentsList = [];\r\n        for (let i in this.state.json) {\r\n            const contents = this.state.json[i]\r\n            if (this.searchData(contents)) {\r\n                contentsList.push(\r\n                    <ControlList key={i}\r\n                        contents={contents}\r\n                        index={i}\r\n                        isOutput={this.state.outputList.includes(i)}\r\n                        outputListControl={this.outputListControler}\r\n                        returnId={this.editContentsHandler} />\r\n                )\r\n            }\r\n        }\r\n        return contentsList;\r\n    }\r\n\r\n    editContentsHandler(id, contents) {\r\n        this.setState({ editId: id, editContents: contents });\r\n        this.openModal();\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({ modalIsOpen: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modalIsOpen: false });\r\n    }\r\n\r\n    // json出力\r\n    outputJsonFile() {\r\n        if (this.state.outputList.length === 0) {\r\n            alert(\"項目を選択してください\");\r\n            return;\r\n        }\r\n        let list = {};\r\n        for (let id in this.state.outputList.slice()) {\r\n            list[id] = this.state.json[id]\r\n        }\r\n\r\n        const fileName = 'finename.csv';\r\n        const data = new Blob([this.state.outputList.join(\",\")], { type: 'text/csv' });\r\n        const jsonURL = window.URL.createObjectURL(data);\r\n        const link = document.createElement('a');\r\n        document.body.appendChild(link);\r\n        link.href = jsonURL;\r\n        link.setAttribute('download', fileName);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    }\r\n\r\n    // 出力リスト制御\r\n    outputListControler(id, checked) {\r\n        let list = this.state.outputList.slice();\r\n        if (checked) {\r\n            list.push(id);\r\n        } else {\r\n            const index = list.indexOf(id)\r\n            if (index !== -1) {\r\n                list = [...list.slice(0, index), ...list.slice(index + 1)]\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        this.setState({\r\n            outputList: list\r\n        })\r\n    }\r\n\r\n    // 一括チェック\r\n    searchedListCheck() {\r\n        let list = this.state.outputList.slice();\r\n        for (let id in this.state.json) {\r\n            if (!list.includes(id)) {\r\n                list.push(id)\r\n            }\r\n        }\r\n        this.setState({\r\n            outputList: list\r\n        })\r\n    }\r\n\r\n    // 一括チェック外し\r\n    allCheckRemove() {\r\n        let list = this.state.outputList.slice();\r\n        for (let id in this.state.json) {\r\n            const index = list.indexOf(id)\r\n            if (index !== -1) {\r\n                list = [...list.slice(0, index), ...list.slice(index + 1)]\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        this.setState({\r\n            outputList: list\r\n        })\r\n    }\r\n\r\n    // 検索結果取得 in：contents 合致：true 不一致：false\r\n    searchData(contents) {\r\n        if(contents.delflg){\r\n            return false\r\n        }\r\n        if (this.state.unit !== \"All\") {\r\n            if (contents.unit !== this.state.unit) {\r\n                return false\r\n            }\r\n        }\r\n        if (this.state.difficulty !== \"All\") {\r\n            if (contents.difficulty !== this.state.difficulty) {\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    // 検索機能表示\r\n    searchControler() {\r\n        return (\r\n            <div className=\"sideBySide searchItems\">\r\n                <div className=\"vcenter\">\r\n                    <p>単元：</p>\r\n                </div>\r\n                <div className=\"select\">\r\n                    <select name=\"unit\" value={this.state.unit} onChange={(e) => this.setState({ unit: e.target.value })} >\r\n                        <option value=\"All\" > All </option>\r\n                        <option value=\"Java\" > Java </option>\r\n                        <option value=\"Oracle\" > Oracle </option>\r\n                        <option value=\"HTML/CSS\" > HTML / CSS </option>\r\n                        <option value=\"IT基礎\" > IT基礎 </option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"vcenter\">\r\n                    <p>難易度：</p>\r\n                </div>\r\n                <div className=\"select\">\r\n                    <select name=\"difficulty\" value={this.state.difficulty} onChange={(e) => this.setState({ difficulty: e.target.value })} >\r\n                        <option value=\"All\" > All </option>\r\n                        <option value=\"入門\" > 入門 </option>\r\n                        <option value=\"初級\" > 初級 </option>\r\n                        <option value=\"中級\" > 中級 </option>\r\n                        <option value=\"上級\" > 上級 </option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // ヘッダー\r\n    controlHeader() {\r\n        return (\r\n            <div className=\"contentsHeader\">\r\n                <div className=\"controlHeaderItems sideBySide\">\r\n                    <div>\r\n                        {this.searchControler()}\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"button is-info\" onClick={() => { this.editContentsHandler(\"-1\") }}>新しい問題</button>\r\n                        <button className=\"button is-info\" onClick={() => { this.outputJsonFile() }}>問題を出力する</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"controlHeaderItems sideBySide\">\r\n                    <div>\r\n                        <button className=\"button is-info\" onClick={() => { this.searchedListCheck() }}>一括チェック</button>\r\n                        <button className=\"button is-info\" onClick={() => { this.allCheckRemove() }}>一括解除</button>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"button is-info\" onClick={() => {this.setState({helpIsOpen:true})}}>使い方</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.state.json.length === 0) {\r\n            this.getFireData();\r\n        }\r\n\r\n        const modal = ClassNames({\r\n            'modal': true,\r\n            'is-active': this.state.modalIsOpen\r\n        })\r\n\r\n        const help = ClassNames({\r\n            'modal': true,\r\n            'is-active': this.state.helpIsOpen\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                {this.controlHeader()}\r\n                <div className=\"contentsList\" >\r\n                    {\r\n                        this.state.json.length === 0 || this.state.json == null ?\r\n                            <p> データがありません </p> : this.contentsList()\r\n                    }\r\n                </div>\r\n                <div className={modal} id={this.state.editId}>\r\n                    <div className=\"modal-background\"></div>\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"delete is-large\" onClick={this.closeModal}> </span>\r\n                        <Edit id={this.state.editId}\r\n                            contents={this.state.editContents} modalOpen={this.state.modalIsOpen} close={this.closeModal} />\r\n                    </div>\r\n                </div>\r\n                <div className={help}>\r\n                    <div className=\"modal-background\"></div>\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"delete is-large\" onClick={() => {this.setState({helpIsOpen:false})}}> </span>\r\n                        <Help />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport firebase from \"firebase\";\r\n\r\nimport List from './List.js'\r\n\r\nexport default class Selected extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.getFile = this.getFile.bind(this);\r\n        this.state = {\r\n            json: []\r\n        };\r\n    }\r\n\r\n    contentsList() {\r\n        let contentsList = [];\r\n        let count = 0;\r\n        for (let i in this.state.json) {\r\n            const contents = this.state.json[i]\r\n            contentsList.push(\r\n                <List key={i} contents={contents} index={count++} />\r\n            )\r\n        }\r\n        return contentsList;\r\n    }\r\n\r\n    selectedHeader() {\r\n        return (\r\n            <div className=\"contentsHeader sideBySide\">\r\n                <div className=\"file is-info\">\r\n                    <label className=\"file-label\">\r\n                        <input className=\"file-input\" type=\"file\" name=\"file\" onChange={this.getFile} />\r\n                        <span className=\"file-cta\">\r\n                            <span className=\"file-label\">\r\n                                ファイル選択\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.selectedHeader()}\r\n                <div className=\"contentsList\">\r\n                    {this.state.json.length === 0 || this.state.json == null\r\n                        ? <p></p> : this.contentsList()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getFile(event) {\r\n        if (event.target.files.length === 0) {\r\n            return;\r\n        }\r\n        var reader = new FileReader();\r\n        reader.readAsText(event.target.files[0]);\r\n        reader.addEventListener('load', () => {\r\n            const selectedidList = reader.result.split(\",\");\r\n            for (let index in selectedidList) {\r\n                const id = selectedidList[index];\r\n                let db = firebase.database();\r\n                let ref = db.ref('contentslist');\r\n                ref.orderByKey().equalTo(id).on('value', (snapshot) => {\r\n                    let elm = this.state.json.slice();\r\n                    elm[id] = snapshot.val()[id];\r\n                    this.setState({\r\n                        json: elm\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport firebase from \"firebase\";\n\nimport All from './All.js'\nimport Control from './Control.js'\nimport Selected from './Selected.js';\n\nimport './App.css';\n\nconst defaultPath = \"/onthesnow-self-made-questions\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Header />\n          <div className=\"body\">\n            <Switch>\n              <Route path={defaultPath} exact component={Selected} />\n              <Route path={defaultPath + \"/all\"} component={All} />\n              <Route path={defaultPath + \"/control\"} component={Control} />\n            </Switch>\n          </div>\n          <Footer />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"header hero is-info is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container header\">\n            <Link to={defaultPath}>\n              <h1 className=\"title\">自作問題集</h1>\n            </Link>\n            <div>\n              <Link to={defaultPath + \"/control\"}>\n                <button className=\"button is-white\">control</button>\n              </Link>\n              <Link to={defaultPath}>\n                <button className=\"button is-white\">list</button>\n              </Link>\n              <Link to={defaultPath + \"/all\"}>\n                <button className=\"button is-white\">all</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"content has-text-centered\">\n          2020 ©snow quartz\n          </div>\n      </div>\n    )\n  }\n}\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDOvPrCTOH1q6xwhvQlQpDX4BCgNx6JHD4\",\n  authDomain: \"self-made-questions.firebaseapp.com\",\n  databaseURL: \"https://self-made-questions.firebaseio.com\",\n  projectId: \"self-made-questions\",\n  storageBucket: \"self-made-questions.appspot.com\",\n  messagingSenderId: \"996121708938\",\n  appId: \"1:996121708938:web:a75824951877640f6e6073\",\n  measurementId: \"G-38GKMPYRY3\"\n};\n\nfirebase.initializeApp(firebaseConfig);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}