{"version":3,"sources":["List.js","All.js","Edit.js","ControlList.js","Control.js","Selected.js","App.js","serviceWorker.js","index.js"],"names":["ListContents","props","state","flg","className","id","this","index","question","contents","choices","answer","unit","list","choiceList","map","choice","key","comments","commentList","comment","onClick","openAnswer","url","setState","React","Component","All","json","getFireData","handleJsonChange","bind","ref","firebase","database","self","orderByKey","on","snapshot","val","li","slice","push","contentsList","count","i","length","Edit","handleChange","event","target","choicesChengeHandler","deleteChoiceHandler","addFireData","editFireData","value","name","onChange","e","Date","getTime","split","clear","set","remove","close","addChoices","deleteQuestion","editHeader","replace","changeChoice","deleteChoice","createAnswer","type","join","defaultProps","Choices","ControlList","changeCheckbox","checked","returnId","outputListControl","editQuestion","Modal","setAppElement","Control","ControlQuestion","outputJsonFile","outputListControler","searchControler","editContentsHandler","closeModal","outputList","editId","editContents","modalIsOpen","openModal","data","Blob","jsonURL","window","URL","createObjectURL","link","document","createElement","body","appendChild","href","setAttribute","click","removeChild","alert","console","log","indexOf","controlHeader","isOpen","onRequestClose","style","modalStyles","contentLabel","overlay","position","top","left","right","bottom","backgroundColor","content","height","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","zIndex","Selected","getFile","selectedHeader","files","reader","FileReader","readAsText","addEventListener","selectedidList","result","equalTo","elm","defaultPath","App","path","exact","component","Header","to","Footer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.263eafd1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class ListContents extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            flg: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"contents content\" id={this.props.index}>\r\n                {this.question(this.props.contents, this.props.index)}\r\n                {this.choices(this.props.contents.choices)}\r\n                {this.answer(this.props.contents, this.props.index)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    question(contents, index) {\r\n        const question = (\r\n            <div className=\"question\">\r\n                <p><strong>問題{index + 1} ({contents.unit})</strong></p>\r\n                <p>{contents.question}</p>\r\n            </div>\r\n        )\r\n        return question;\r\n    }\r\n\r\n    choices(list) {\r\n        const choiceList = list.map((choice, index) => {\r\n            return (\r\n                <li key={index}>{index+1}: {choice}</li>\r\n            );\r\n        });\r\n        const choices = (\r\n            <div className=\"choices\">\r\n                <ul>{choiceList}</ul>\r\n            </div>\r\n        )\r\n\r\n        return choices\r\n    }\r\n\r\n    comment(comments){\r\n        const commentList = comments.map((comment, index) => {\r\n            return(\r\n            <span key={index}>{index !== 0 && <br/>}{comment}</span>\r\n            )\r\n        });\r\n        return(\r\n            <span>{commentList}</span>\r\n        )\r\n    }\r\n\r\n    answer(contents, index) {\r\n        const flg = this.state.flg;\r\n\r\n        const answer = (\r\n            <div className=\"answer\">\r\n                <button className=\"button is-info\" onClick={() => { this.openAnswer() }}>回答</button>\r\n                {flg &&\r\n                    <div className=\"commentary\">\r\n                        <p>答え： {contents.answer}</p>\r\n                        <p>解説：<br />{this.comment(contents.comment)}</p>\r\n                        <p>{contents.url}</p>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n        return answer;\r\n    }\r\n\r\n    openAnswer() {\r\n        const flg = this.state.flg;\r\n        this.setState({\r\n            flg: !flg\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport firebase from \"firebase\";\r\n\r\nimport List from './List.js'\r\n\r\nexport default class All extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            json: []\r\n        };\r\n        this.getFireData();\r\n        this.handleJsonChange = this.handleJsonChange.bind(this);\r\n    }\r\n\r\n    getFireData(){\r\n        let db = firebase.database();\r\n        let ref = db.ref('contentslist');\r\n        let self = this;\r\n        ref.orderByKey().on('value',(snapshot)=>{\r\n            self.setState({\r\n                json:snapshot.val()\r\n            })\r\n        })\r\n    }\r\n\r\n    handleJsonChange(json) {\r\n        let li = this.state.json.slice();\r\n        li.push(json);\r\n        this.setState({ json: li })\r\n    }\r\n\r\n    contentsList() {\r\n        let contentsList = [];\r\n        let count = 0;\r\n        for(let i in this.state.json){\r\n            const contents = this.state.json[i]\r\n            contentsList.push(\r\n                <List key={i} contents={contents} index={count++} />\r\n            )\r\n        }\r\n        return contentsList;\r\n    }\r\n\r\n    render() {\r\n        if(this.state.json.length === 0){\r\n            this.getFireData();\r\n        }\r\n\r\n        return (\r\n            <div className=\"contentsList\">\r\n                {this.state.json.length === 0 || this.state.json == null\r\n                    ? <p>データがありません</p> : this.contentsList()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\nexport default class Edit extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.choicesChengeHandler = this.choicesChengeHandler.bind(this);\r\n        this.deleteChoiceHandler = this.deleteChoiceHandler.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addFireData = this.addFireData.bind(this);\r\n        this.editFireData = this.editFireData.bind(this);\r\n        this.state = {\r\n            id: -1,\r\n            unit: \"Java\",\r\n            question: \"\",\r\n            choices: [\"\", \"\", \"\", \"\", \"\"],\r\n            answer: 1,\r\n            comment: [],\r\n            url: \"\",\r\n            json: []\r\n        }\r\n    }\r\n\r\n    choicesChengeHandler(index, choice) {\r\n        let choices = this.state.choices.slice();\r\n        choices[index] = choice;\r\n        this.setState({ choices })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            unit: event.target.unit,\r\n            question: event.target.question,\r\n            answer: event.target.answer,\r\n            comment: event.target.answer\r\n        })\r\n    }\r\n\r\n    addChoices() {\r\n        let choices = this.state.choices.slice();\r\n        choices.push(\"\");\r\n        this.setState({ choices })\r\n    }\r\n\r\n    deleteChoiceHandler(index) {\r\n        let choices = this.state.choices.slice();\r\n        choices = [...choices.slice(0, index), ...choices.slice(index + 1)]\r\n        this.setState({ choices })\r\n    }\r\n\r\n    createAnswer() {\r\n        const choiceList = this.state.choices;\r\n        const answer = choiceList.map((choice, index) => {\r\n            return (\r\n                <option key={index} value={index + 1}>{index + 1}</option>\r\n            )\r\n        });\r\n        return (\r\n            <select name=\"answer\" value={this.state.answer}\r\n                onChange={(e) => this.setState({ answer: e.target.value })}>\r\n                {answer}\r\n            </select>\r\n        );\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            unit: \"Java\",\r\n            question: \"\",\r\n            choices: [\"\", \"\", \"\", \"\", \"\"],\r\n            answer: 1,\r\n            comment: [],\r\n            url: \"\",\r\n            json: []\r\n        })\r\n    }\r\n\r\n    // データ追加処理\r\n    addFireData() {\r\n        let id = new Date().getTime();\r\n        let db = firebase.database();\r\n        let ref = db.ref(\"contentslist\");\r\n        let comment = this.state.comment;\r\n        ref.push({\r\n            id: id,\r\n            unit: this.state.unit || '',\r\n            question: this.state.question || '',\r\n            choices: this.state.choices || '',\r\n            answer: this.state.answer || '',\r\n            comment: comment.split('\\n') || '',\r\n            url: this.state.url || ''\r\n        })\r\n        this.clear();\r\n    }\r\n\r\n    // データ編集処理\r\n    editFireData() {\r\n        const id = this.props.id;\r\n        let db = firebase.database();\r\n        let ref = db.ref(\"contentslist/\" + id);\r\n        let comment = this.state.comment;\r\n        ref.set({\r\n            unit: this.state.unit || '',\r\n            question: this.state.question || '',\r\n            choices: this.state.choices || '',\r\n            answer: this.state.answer || '',\r\n            comment: comment.split('\\n') || '',\r\n            url: this.state.url || ''\r\n        })\r\n    }\r\n\r\n    // データ削除\r\n    deleteQuestion() {\r\n        const id = this.props.id;\r\n        let db = firebase.database();\r\n        let ref = db.ref(\"contentslist/\" + id);\r\n        ref.remove();\r\n    }\r\n\r\n    editCansel() {\r\n        this.props.close();\r\n    }\r\n\r\n    // ヘッダー\r\n    editHeader() {\r\n        return (\r\n            <div className=\"contentsHeader\">\r\n                <div className=\"editButton\">\r\n                    <button className=\"button is-info\" onClick={() => { this.addChoices() }}>選択肢を増やす</button>\r\n                    <button className=\"button is-info\" onClick={() => { this.clear() }}>クリア</button>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        this.props.id === \"-1\"\r\n                            ? <button className=\"button is-info\" onClick={this.addFireData}>問題を追加する</button>\r\n                            :\r\n                            <div>\r\n                                <button className=\"button is-info\" onClick={this.editFireData}>問題を編集する</button>\r\n                                <button className=\"button is-info\" onClick={() => { this.deleteQuestion() }}>問題を削除する</button>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.editHeader()}\r\n                <div className=\"addQuestion\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th className=\"questionLabel\">単元</th>\r\n                                <th>\r\n                                    <div className=\"select\">\r\n                                        <select name=\"unit\" value={this.state.unit}\r\n                                            onChange={(e) => this.setState({ unit: e.target.value })}>\r\n                                            <option value=\"Java\">Java</option>\r\n                                            <option value=\"Oracle\">Oracle</option>\r\n                                            <option value=\"HTML/CSS\">HTML/CSS</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"questionLabel\">問題文</th>\r\n                                <th>\r\n                                    <textarea className=\"textarea\" name=\"question\" value={this.state.question}\r\n                                        onChange={(e) => this.setState({ question: e.target.value.replace(/\\r?\\n/g, \"\") })} />\r\n                                </th>\r\n                            </tr>\r\n                            {this.state.choices.map((choice, index) => (\r\n                                <Choices key={index} index={index} choice={choice}\r\n                                    changeChoice={this.choicesChengeHandler} deleteChoice={this.deleteChoiceHandler} />\r\n                            ))}\r\n                            <tr>\r\n                                <th className=\"questionLabel\">答え</th>\r\n                                <th>\r\n                                    <div className=\"select\">\r\n                                        {this.createAnswer()}\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"questionLabel\">解説</th>\r\n                                <th>\r\n                                    <textarea className=\"textarea\" name=\"comment\" value={this.state.comment}\r\n                                        onChange={(e) => this.setState({ comment: e.target.value })} />\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"questionLabel\">URL</th>\r\n                                <th>\r\n                                    <input className=\"input\" type=\"text\" name=\"url\" value={this.state.url}\r\n                                        onChange={(e) => this.setState({ url: e.target.value })} />\r\n                                </th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.id === \"-1\") {\r\n            return;\r\n        }\r\n        this.setState({\r\n            id: this.props.contents.id,\r\n            unit: this.props.contents.unit,\r\n            question: this.props.contents.question,\r\n            choices: this.props.contents.choices,\r\n            answer: this.props.contents.answer,\r\n            comment: this.props.contents.comment.join('\\n'),\r\n            url: this.props.contents.url\r\n        })\r\n    }\r\n}\r\n\r\nEdit.defaultProps = {\r\n    id: \"-1\",\r\n    contents: {}\r\n}\r\n\r\nclass Choices extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeChoice = this.changeChoice.bind(this);\r\n        this.deleteChoice = this.deleteChoice.bind(this);\r\n    }\r\n\r\n    changeChoice(e) {\r\n        this.props.changeChoice(this.props.index, e.target.value);\r\n    }\r\n\r\n    deleteChoice(index) {\r\n        this.props.deleteChoice(index);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <th className=\"questionLabel\">{this.props.index + 1}</th>\r\n                <th>\r\n                    <input className=\"input\" type=\"text\" value={this.props.choice} onChange={this.changeChoice} />\r\n                    <button className=\"button\" onClick={() => { this.deleteChoice(this.props.index) }}>削除</button>\r\n                </th>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ControlList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckbox = this.changeCheckbox.bind(this);\r\n        this.state = ({\r\n            checked: false\r\n        })\r\n    }\r\n\r\n    editQuestion() {\r\n        this.props.returnId(this.props.index, this.props.contents);\r\n    }\r\n\r\n    changeCheckbox() {\r\n        const checked = !this.state.checked;\r\n        this.props.outputListControl(this.props.index, checked);\r\n\r\n        this.setState({\r\n            checked: checked\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"contents content\" id={this.props.index}>\r\n                <input type=\"checkbox\" checked={this.state.checked}\r\n                    onChange={() => this.changeCheckbox()} />\r\n                {this.question(this.props.contents, this.props.index)}\r\n                {this.choices(this.props.contents.choices)}\r\n                {this.answer(this.props.contents, this.props.index)}\r\n                <button className=\"button is-info\" onClick={() => { this.editQuestion() }}>編集</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    question(contents, index) {\r\n        const question = (\r\n            <div className=\"question\">\r\n                <p><strong>問題ID:{index} ({contents.unit})</strong></p>\r\n                <p>{contents.question}</p>\r\n            </div>\r\n        )\r\n        return question;\r\n    }\r\n\r\n    choices(list) {\r\n        const choiceList = list.map((choice, index) => {\r\n            return (\r\n                <li key={index}>{index + 1}: {choice}</li>\r\n            );\r\n        });\r\n        const choices = (\r\n            <div className=\"choices\">\r\n                <ul>{choiceList}</ul>\r\n            </div>\r\n        )\r\n\r\n        return choices\r\n    }\r\n\r\n    comment(comments) {\r\n        const commentList = comments.map((comment, index) => {\r\n            return (\r\n                <span key={index}>{index !== 0 && <br />}{comment}</span>\r\n            )\r\n        });\r\n        return (\r\n            <span>{commentList}</span>\r\n        )\r\n    }\r\n\r\n    answer(contents, index) {\r\n        const answer = (\r\n            <div className=\"answer\">\r\n                <div className=\"commentary\">\r\n                    <p>答え： {contents.answer}</p>\r\n                    <p>解説：<br />{this.comment(contents.comment)}</p>\r\n                    <p>{contents.url}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n        return answer;\r\n    }\r\n}","import React from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport Modal from 'react-modal';\r\n\r\nimport Edit from \"./Edit.js\";\r\nimport ControlList from \"./ControlList.js\";\r\n\r\nModal.setAppElement('#root')\r\n\r\nexport default class Control extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ControlQuestion />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ControlQuestion extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.outputJsonFile = this.outputJsonFile.bind(this);\r\n        this.outputListControler = this.outputListControler.bind(this);\r\n        this.searchControler = this.searchControler.bind(this);\r\n        this.editContentsHandler = this.editContentsHandler.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.state = {\r\n            json: [],\r\n            outputList: [],\r\n            unit: \"All\",\r\n            editId: \"-1\",\r\n            editContents: {},\r\n            modalIsOpen: false\r\n        };\r\n        this.getFireData();\r\n    }\r\n\r\n    getFireData() {\r\n        let db = firebase.database();\r\n        let ref = db.ref('contentslist');\r\n        let self = this;\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            self.setState({\r\n                json: snapshot.val()\r\n            })\r\n        })\r\n    }\r\n\r\n    contentsList() {\r\n        let contentsList = [];\r\n        for (let i in this.state.json) {\r\n            const contents = this.state.json[i]\r\n            if (this.state.unit === \"All\" || contents.unit === this.state.unit) {\r\n                contentsList.push(\r\n                    <ControlList key={i}\r\n                        contents={contents}\r\n                        index={i}\r\n                        outputListControl={this.outputListControler}\r\n                        returnId={this.editContentsHandler} />\r\n                )\r\n            }\r\n        }\r\n        return contentsList;\r\n    }\r\n\r\n    editContentsHandler(id, contents) {\r\n        this.setState({ editId: id, editContents: contents });\r\n        this.openModal();\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({ modalIsOpen: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modalIsOpen: false });\r\n    }\r\n\r\n    // json出力\r\n    outputJsonFile() {\r\n        if (this.state.outputList.length === 0) {\r\n            alert(\"項目を選択してください\");\r\n            return;\r\n        }\r\n        let list = {};\r\n        for (let id in this.state.outputList.slice()) {\r\n            list[id] = this.state.json[id]\r\n        }\r\n\r\n        const fileName = 'finename.csv';\r\n        const data = new Blob([this.state.outputList.join(\",\")], { type: 'text/csv' });\r\n        const jsonURL = window.URL.createObjectURL(data);\r\n        const link = document.createElement('a');\r\n        document.body.appendChild(link);\r\n        link.href = jsonURL;\r\n        link.setAttribute('download', fileName);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    }\r\n\r\n    // 出力リスト制御\r\n    outputListControler(id, checked) {\r\n        console.log(id + \" : \" + checked)\r\n        let list = this.state.outputList.slice();\r\n        if (checked) {\r\n            list.push(id);\r\n        } else {\r\n            const index = list.indexOf(id)\r\n            if (index !== -1) {\r\n                list = [...list.slice(0, index), ...list.slice(index + 1)]\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        this.setState({\r\n            outputList: list\r\n        })\r\n    }\r\n\r\n    // 検索機能\r\n    searchControler() {\r\n        return (\r\n            <div>\r\n                <div className=\"select\">\r\n                    <select name=\"unit\" value={this.state.unit} onChange={(e) => this.setState({ unit: e.target.value, outputList: [] })} >\r\n                        <option value=\"All\" > All </option>\r\n                        <option value=\"Java\" > Java </option>\r\n                        <option value=\"Oracle\" > Oracle </option>\r\n                        <option value=\"HTML/CSS\" > HTML / CSS </option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // ヘッダー\r\n    controlHeader() {\r\n        return (\r\n            <div className=\"contentsHeader\">\r\n                <div>\r\n                    {this.searchControler()}\r\n                </div>\r\n                <div>\r\n                    <button className=\"button is-info\" onClick={() => { this.editContentsHandler(\"-1\") }}>新しい問題</button>\r\n                    <button className=\"button is-info\" onClick={() => { this.outputJsonFile() }}>問題を出力する</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.state.json.length === 0) {\r\n            this.getFireData();\r\n        }\r\n\r\n        return (\r\n            <div> {this.controlHeader()}\r\n                <div className=\"contentsList\" >\r\n                    {\r\n                        this.state.json.length === 0 || this.state.json == null ?\r\n                            <p> データがありません </p> : this.contentsList()\r\n                    }\r\n                </div>\r\n                <Modal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onRequestClose={this.closeModal.bind(this)}\r\n                    style={modalStyles}\r\n                    contentLabel=\"edit question\" >\r\n                    <span className=\"delete\" onClick={this.closeModal}> </span>\r\n                    <Edit id={this.state.editId}\r\n                        contents={this.state.editContents} />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst modalStyles = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n    },\r\n    content: {\r\n        position: 'absolute',\r\n        height: '900px',\r\n        top: '40px',\r\n        left: '40px',\r\n        right: '40px',\r\n        bottom: '40px',\r\n        border: '1px solid #ccc',\r\n        background: '#c1e4e9',\r\n        overflow: 'auto',\r\n        WebkitOverflowScrolling: 'touch',\r\n        borderRadius: '4px',\r\n        outline: 'none',\r\n        padding: '20px',\r\n        zIndex: '-1'\r\n    }\r\n};","import React from 'react';\r\nimport firebase from \"firebase\";\r\n\r\nimport List from './List.js'\r\n\r\nexport default class Selected extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.getFile = this.getFile.bind(this);\r\n        this.state = {\r\n            json: []\r\n        };\r\n    }\r\n\r\n    contentsList() {\r\n        let contentsList = [];\r\n        let count = 0;\r\n        for (let i in this.state.json) {\r\n            const contents = this.state.json[i]\r\n            contentsList.push(\r\n                <List key={i} contents={contents} index={count++} />\r\n            )\r\n        }\r\n        return contentsList;\r\n    }\r\n\r\n    selectedHeader() {\r\n        return (\r\n            <div className=\"contentsHeader\">\r\n                <div className=\"file is-info\">\r\n                    <label className=\"file-label\">\r\n                        <input className=\"file-input\" type=\"file\" name=\"file\" onChange={this.getFile} />\r\n                        <span className=\"file-cta\">\r\n                            <span className=\"file-label\">\r\n                                ファイル選択\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.selectedHeader()}\r\n                <div className=\"contentsList\">\r\n                    {this.state.json.length === 0 || this.state.json == null\r\n                        ? <p></p> : this.contentsList()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getFile(event) {\r\n        if (event.target.files.length === 0) {\r\n            return;\r\n        }\r\n        var reader = new FileReader();\r\n        reader.readAsText(event.target.files[0]);\r\n        reader.addEventListener('load', () => {\r\n            const selectedidList = reader.result.split(\",\");\r\n            for (let index in selectedidList) {\r\n                const id = selectedidList[index];\r\n                let db = firebase.database();\r\n                let ref = db.ref('contentslist');\r\n                ref.orderByKey().equalTo(id).on('value', (snapshot) => {\r\n                    let elm = this.state.json.slice();\r\n                    elm[id] = snapshot.val()[id];\r\n                    this.setState({\r\n                        json: elm\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport firebase from \"firebase\";\n\nimport All from './All.js'\nimport Control from './Control.js'\nimport Selected from './Selected.js';\n\nimport './App.css';\n\nconst defaultPath = \"/onthesnow-self-made-questions\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Header />\n          <div className=\"body\">\n            <Switch>\n              <Route path={defaultPath} exact component={Selected} />\n              <Route path={defaultPath + \"/all\"} component={All} />\n              <Route path={defaultPath + \"/control\"} component={Control} />\n            </Switch>\n          </div>\n          <Footer />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"header hero is-info is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container header\">\n            <Link to={defaultPath}>\n              <h1 className=\"title\">自作問題集</h1>\n            </Link>\n            <div>\n              <Link to={defaultPath + \"/control\"}>\n                <button className=\"button is-white\">control</button>\n              </Link>\n              <Link to={defaultPath}>\n                <button className=\"button is-white\">list</button>\n              </Link>\n              <Link to={defaultPath + \"/all\"}>\n                <button className=\"button is-white\">all</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"content has-text-centered\">\n          2020 ©snow quartz\n          </div>\n      </div>\n    )\n  }\n}\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDOvPrCTOH1q6xwhvQlQpDX4BCgNx6JHD4\",\n  authDomain: \"self-made-questions.firebaseapp.com\",\n  databaseURL: \"https://self-made-questions.firebaseio.com\",\n  projectId: \"self-made-questions\",\n  storageBucket: \"self-made-questions.appspot.com\",\n  messagingSenderId: \"996121708938\",\n  appId: \"1:996121708938:web:a75824951877640f6e6073\",\n  measurementId: \"G-38GKMPYRY3\"\n};\n\nfirebase.initializeApp(firebaseConfig);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}